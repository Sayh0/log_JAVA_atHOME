package test.main;

import java.sql.*;

public class MainClass02 {
	public static void main(String[] args) {
	      //DB 연결객체를 담을 지역 변수 만들기
	      Connection conn=null;
	      try {
	         //오라클 드라이버 로딩
	         Class.forName("oracle.jdbc.driver.OracleDriver");
	         //접속할 DB 의 정보 @아이피주소:port번호:db이름
	         String url="jdbc:oracle:thin:@localhost:1521:xe";
	         //계정 비밀번호를 이용해서 Connection 객체의 참조값 얻어오기
	         conn=DriverManager.getConnection(url, "scott", "tiger");
	         //예외가 발생하지 않고 여기까지 실행순서가 내려오면 접속 성공이다.
	         System.out.println("Oracle DB 접속 성공");
	      } catch (Exception e) {
	         e.printStackTrace();
	      }
	      //member 테이블에 추가할 회원 정보
	      int num=4;
	      String name="hong";
	      String addr="Incheon";
	      //
	      //SELECT 작업을 위해서 필요한 객체의 참조값을 담을 지역변수 미리 만들기 
	      PreparedStatement pstmt=null;
	      //result는 지금 select문은 결과가 필요없으니 필요없다. 
	      try {
	         //실행할 미완성의 sql 문
	         String sql="INSERT INTO member"
	               + " (num, name, addr)"
	               + " VALUES(?, ?, ?)"; //데이터를 집어넣을 위치에 ? 써놓기.
	         //PreparedStatement 객체의 참조값 얻어오기
	         pstmt=conn.prepareStatement(sql);
	         // ? 에 값을 바인딩해서 미완성의 sql 문을 완성 시킨다.
	         pstmt.setInt(1, num);
	         pstmt.setString(2, name);
	           pstmt.setString(3, addr); //1, 2, 3 은 들어갈 물음표의 순서.
	           //sql 문 실행하기
	           pstmt.executeUpdate(); //executeQuery 가 아니다! 인서트 동작 수행이기 때문에 업데이트 메소드를 호출.
	           System.out.println("회원 정보를 저장했습니다.");
	      }catch(Exception e) {
	         e.printStackTrace();
	      }
	      
	   }
	}

